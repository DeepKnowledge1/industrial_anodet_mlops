trigger:
  paths:
    include:
      - infra/

variables:
  - group: mlops-azure-components  # Azure connection + secrets

  - name: RESOURCE_GROUP
    value: my-mlops-rg
  - name: WORKSPACE
    value: my-mlops-ws
  - name: LOCATION
    value: east

  - name: COMPUTE_NAME
    value: padim-cpu-cluster

  - name: DATASET_NAME-da
    value: trainingta
  - name: datasetPath
    value: infra/training-data/

  - name: ACR_NAME
    value: mymlopsacr
  - name: AKS_NAME
    value: my-mlops-aks
  - name: aksCOMPUTE_NAME
    value: mlops-aks

pool:
  name:Default

stages:
- stage: BootstrapAzureMLInfra
  displayName: 'Provision Azure ML Infrastructure'
  jobs:
  - job: Setup
    displayName: 'Create ACR, AKS, Workspace, Compute, Dataset'
    steps:

    - task: AzureCLI@2
      displayName: 'Step 1 - Create Resource Group'
      inputs:
        azureSubscription: mlops_anomaly_detection # service connection
        scriptType: bash
        scriptLOCATION: inlineScript
        inlineScript: |
          az group create \
            --name $(RESOURCE_GROUP) \
            --LOCATION $(LOCATION)

    - task: AzureCLI@2
      displayName: 'Step 2 - Create Azure ML Workspace'
      inputs:
        azureSubscription: mlops_anomaly_detection # service connection
        scriptType: bash
        scriptLOCATION: inlineScript
        inlineScript: |
          az ml workspace show \
            --name $(WORKSPACE) \
            --resource-group $(RESOURCE_GROUP) \
            || az ml workspace create \
              --name $(WORKSPACE) \
              --resource-group $(RESOURCE_GROUP) \
              --LOCATION $(LOCATION)

    - task: AzureCLI@2
      displayName: 'Step 3 - Create Azure ML Compute Cluster'
      inputs:
        azureSubscription: mlops_anomaly_detection # service connection
        scriptType: bash
        scriptLOCATION: inlineScript
        inlineScript: |
          az ml compute show \
            --name $(COMPUTE_NAME) \
            --workspace-name $(WORKSPACE) \
            --resource-group $(RESOURCE_GROUP) \
            || az ml compute create \
              --name $(COMPUTE_NAME) \
              --type AmlCompute \
              --min-instances 0 \
              --max-instances 2 \
              --size Standard_DS3_v2 \
              --idle-time-before-scale-down 20 \
              --resource-group $(RESOURCE_GROUP) \
              --workspace-name $(WORKSPACE)
              

    - task: AzureCLI@2
      displayName: 'Step 4 - Create ACR'
      inputs:
        azureSubscription: mlops_anomaly_detection # service connection
        scriptType: bash
        scriptLOCATION: inlineScript
        inlineScript: |
          az acr show --name $(ACR_NAME) --resource-group $(RESOURCE_GROUP) \
            || az acr create \
                --name $(ACR_NAME) \
                --resource-group $(RESOURCE_GROUP) \
                --sku Basic \
                --admin-enabled true

    - task: AzureCLI@2
      displayName: 'Step 5 - Create AKS with Autoscaler'
      inputs:
        azureSubscription: mlops_anomaly_detection # service connection
        scriptType: bash
        scriptLOCATION: inlineScript
        inlineScript: |
          az aks show --name $(AKS_NAME) --resource-group $(RESOURCE_GROUP) \
            || az aks create \
                --resource-group $(RESOURCE_GROUP) \
                --name $(AKS_NAME) \
                --enable-cluster-autoscaler \
                --min-count 0 \
                --max-count 2 \
                --node-vm-size Standard_DS3_v2 \
                --enable-addons monitoring \
                --enable-managed-identity \
                --generate-ssh-keys

    - task: AzureCLI@2
      displayName: 'Step 6 - Attach ACR to AKS'
      inputs:
        azureSubscription: mlops_anomaly_detection # service connection
        scriptType: bash
        scriptLOCATION: inlineScript
        inlineScript: |
          az aks update \
            --name $(AKS_NAME) \
            --resource-group $(RESOURCE_GROUP) \
            --attach-acr $(ACR_NAME)

    - task: AzureCLI@2
      displayName: 'Step 7 - Install ML CLI Extension'
      inputs:
        azureSubscription: mlops_anomaly_detection # service connection
        scriptType: bash
        scriptLOCATION: inlineScript
        inlineScript: |
          az extension add -n ml || az extension update -n ml

    - task: AzureCLI@2
      displayName: 'Step 8 - Attach AKS to Azure ML Workspace'
      inputs:
        azureSubscription: mlops_anomaly_detection # service connection
        scriptType: bash
        scriptLOCATION: inlineScript
        inlineScript: |
          AKS_ID=$(az aks show --name $(AKS_NAME) --resource-group $(RESOURCE_GROUP) --query id -o tsv)
          az ml compute attach \
            --type aks \
            --name $(aksCOMPUTE_NAME) \
            --resource-group $(RESOURCE_GROUP) \
            --workspace-name $(WORKSPACE) \
            --resource-id $AKS_ID \
            --no-wait

    - task: AzureCLI@2
      displayName: 'Step 9 - Register Dataset (only if missing)'
      inputs:
        azureSubscription: mlops_anomaly_detection # service connection
        scriptType: bash
        scriptLOCATION: inlineScript
        inlineScript: |
          EXIST=$(az ml data list --workspace-name $(WORKSPACE) --resource-group $(RESOURCE_GROUP) \
            --query "[?name=='$(DATASET_NAME)'] | length(@)" -o tsv)

          if [[ "$EXIST" == "0" ]]; then
            az ml data create \
              --name $(DATASET_NAME) \
              --type uri_folder \
              --path $(datasetPath) \
              --resource-group $(RESOURCE_GROUP) \
              --workspace-name $(WORKSPACE)
          else
            echo "âœ… Dataset already exists. Skipping upload."
          fi
